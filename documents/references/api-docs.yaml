openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /projects/{requestedId}:
    get:
      tags:
        - project-controller
      operationId: getProject
      parameters:
        - name: requestedId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Project"
    put:
      tags:
        - project-controller
      operationId: updateProject
      parameters:
        - name: requestedId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Project"
    delete:
      tags:
        - project-controller
      operationId: deleteProject
      parameters:
        - name: requestedId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  /appusers:
    put:
      tags:
        - app-user-controller
      operationId: changePassword
      parameters:
        - name: passwordEncoder
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/BCryptPasswordEncoder"
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
    delete:
      tags:
        - app-user-controller
      operationId: deleteAppUser
      responses:
        "200":
          description: OK
  /token:
    post:
      tags:
        - token-controller
      operationId: getToken
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  /projects:
    get:
      tags:
        - project-controller
      operationId: getAllProjects
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"
    post:
      tags:
        - project-controller
      operationId: createProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project"
        required: true
      responses:
        "200":
          description: OK
  /projects/create-version:
    post:
      tags:
        - project-controller
      operationId: createProjectVersion
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project"
        required: true
      responses:
        "200":
          description: OK
components:
  schemas:
    FunctionalComponent:
      type: object
      properties:
        id:
          type: integer
          format: int64
        className:
          type: string
        componentType:
          type: string
        dataElements:
          type: integer
          format: int32
        readingReferences:
          type: integer
          format: int32
        writingReferences:
          type: integer
          format: int32
        functionalMultiplier:
          type: integer
          format: int32
        operations:
          type: integer
          format: int32
        degreeOfCompletion:
          type: number
          format: double
        title:
          type: string
        previousFCId:
          type: integer
          format: int64
    Project:
      type: object
      properties:
        id:
          type: integer
          format: int64
        projectName:
          type: string
        version:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        versionDate:
          type: string
          format: date-time
        editedDate:
          type: string
          format: date-time
        totalPoints:
          type: number
          format: double
        functionalComponents:
          type: array
          items:
            $ref: "#/components/schemas/FunctionalComponent"
          uniqueItems: true
        appUsers:
          type: array
          items:
            $ref: "#/components/schemas/ProjectAppUser"
          uniqueItems: true
    ProjectAppUser:
      type: object
      properties:
        appUserId:
          type: integer
          format: int64
    BCryptPasswordEncoder: {}
